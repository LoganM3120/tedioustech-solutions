name: Security Monitoring (PRs, Push, Weekly)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [ main ]
    paths:
      - '**/*.js'
      - '**/*.py'
  schedule:
    - cron: "17 4 * * 1"   # Mondays UTC — weekly CodeQL sweep
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  actions: read
  security-events: write

concurrency:
  group: sec-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

env:
  DEFAULT_BRANCH: main

jobs:
  changes_guard:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      touched_sensitive: ${{ steps.set.outputs.touched_sensitive }}
      touched_list: ${{ steps.set.outputs.touched_list }}
      code_changed: ${{ steps.set.outputs.code_changed }}
    steps:
      - name: Harden runner (egress audit)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Detect sensitive & code file changes
        id: filter
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        with:
          token: ${{ github.token }}
          filters: |
            workflows:
              - '.github/workflows/**'
            dependencies:
              - 'package-lock.json'
              - 'pnpm-lock.yaml'
              - 'yarn.lock'
              - 'package.json'
              - 'requirements*.txt'
              - 'Pipfile.lock'
              - 'poetry.lock'
              - '**/Gemfile*'
              - '**/*.gradle*'
              - '**/go.mod'
              - '**/go.sum'
            code_js:
              - '**/*.js'
            code_py:
              - '**/*.py'

      - name: Set outputs & warnings
        id: set
        shell: bash
        env:
          W_CHANGED: "${{ steps.filter.outputs.workflows }}"
          D_CHANGED: "${{ steps.filter.outputs.dependencies }}"
          JS_CHANGED: "${{ steps.filter.outputs.code_js }}"
          PY_CHANGED: "${{ steps.filter.outputs.code_py }}"
        run: |
          CHANGED_LIST=()
          [ "$W_CHANGED" = "true" ] && CHANGED_LIST+=("workflows")
          [ "$D_CHANGED" = "true" ] && CHANGED_LIST+=("dependencies")

          if [ ${#CHANGED_LIST[@]} -gt 0 ]; then
            echo "::warning::Sensitive areas modified: ${CHANGED_LIST[*]}"
            echo "touched_sensitive=true" >> "$GITHUB_OUTPUT"
            echo "touched_list=${CHANGED_LIST[*]}" >> "$GITHUB_OUTPUT"
          else
            echo "touched_sensitive=false" >> "$GITHUB_OUTPUT"
            echo "touched_list=" >> "$GITHUB_OUTPUT"
          fi

          if [ "$JS_CHANGED" = "true" ] || [ "$PY_CHANGED" = "true" ]; then
            echo "code_changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "code_changed=false" >> "$GITHUB_OUTPUT"
          fi

  dependency_review:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Harden runner (egress audit)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Dependency Review
        uses: actions/dependency-review-action@595b5aeba73380359d98a5e087f648dbb0edce1b # v4.7.3
        with:
          fail-on-severity: high
          comment-summary-in-pr: true

  codeql:
    # Run on PR (only if code changed), push to main (paths gate at trigger),
    # weekly cron, and manual dispatch.
    if: ${{ github.event_name == 'pull_request' && needs.changes_guard.outputs.code_changed == 'true'
          || github.event_name == 'push'
          || github.event_name == 'schedule'
          || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Harden runner (egress audit)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Keep only if your build uses Node; otherwise remove.
      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '20'
          cache: 'npm'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.11
        with:
          languages: javascript,python

      - name: Autobuild
        uses: github/codeql-action/autobuild@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.11

      - name: Analyze
        uses: github/codeql-action/analyze@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3.29.11
        with:
          category: "/security-monitoring"

  discord_summary:
    needs: [changes_guard, dependency_review, codeql]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Post summary to Discord (skips if no webhook)
        shell: bash
        env:
          DISCORD_SECURITY: ${{ secrets.DISCORD_SECURITY }}
          GREEN: "5763719"     # 0x57F287
          YELLOW: "16705308"   # 0xFEE75C
          RED: "15548997"      # 0xED4245
        run: |
          if [ -z "${DISCORD_SECURITY:-}" ]; then
            echo "No Discord webhook configured; skipping."
            exit 0
          fi

          cg="${{ needs.changes_guard.result || 'skipped' }}"
          dr="${{ needs.dependency_review.result || 'skipped' }}"
          cq="${{ needs.codeql.result || 'skipped' }}"
          touched="${{ needs.changes_guard.outputs.touched_sensitive }}"
          touched_list="${{ needs.changes_guard.outputs.touched_list }}"

          COLOR="$GREEN"
          if [ "$cg" = "failure" ] || [ "$dr" = "failure" ] || [ "$cq" = "failure" ]; then
            COLOR="$RED"
          elif [ "$touched" = "true" ] || { [ "$dr" = "success" ] && [ "$cq" = "skipped" ]; }; then
            COLOR="$YELLOW"
          fi

          ts="$(date -u +%FT%TZ)"
          title="🔐 Security workflow — ${{ github.repository }} @ ${{ github.ref_name }}"
          desc="• Changes Guard: ${cg}\n• Dependency Review: ${dr}\n• CodeQL: ${cq}"
          [ "$touched" = "true" ] && desc="${desc}\n\n⚠️ Sensitive areas changed: ${touched_list}"

          run_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          alerts_url="https://github.com/${{ github.repository }}/security/code-scanning"
          dep_url="https://github.com/${{ github.repository }}/security/dependabot"

          jq -n \
            --arg title "$title" \
            --arg desc "$desc" \
            --arg url "$run_url" \
            --arg ts "$ts" \
            --arg alerts "$alerts_url" \
            --arg deps "$dep_url" \
            --argjson color ${COLOR} \
            '{
              content: "",
              embeds: [{
                title: $title,
                description: $desc,
                url: $url,
                timestamp: $ts,
                color: $color,
                fields: [
                  {name:"🔎 Code Scanning Alerts", value:$alerts, inline:true},
                  {name:"🧩 Dependency Alerts", value:$deps, inline:true}
                ]
              }]
            }' \
          | curl -sS -H "Content-Type: application/json" -d @- "${DISCORD_SECURITY}" >/dev/null
