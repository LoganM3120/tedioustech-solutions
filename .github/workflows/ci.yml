name: Deploy Notifications

on:
  # Only react to deployment status changes (not "deployment" creation)
  deployment_status:

jobs:
  notify:
    name: Post selective deploy updates
    runs-on: ubuntu-latest
    # Only run for these states
    if: contains(fromJson('["in_progress","success","failure"]'), github.event.deployment_status.state)

    steps:
      - name: Build message
        id: msg
        shell: bash
        run: |
         repo="${{ github.repository }}"
          env="${{ github.event.deployment.environment }}"
          state="${{ github.event.deployment_status.state }}"
          url="${{ github.event.deployment_status.environment_url }}"
          sha="${{ github.event.deployment.sha }}"
          short_sha="${sha:0:7}"
    
            case "$state" in
              in_progress)
                content="üöÄ Deployment started for $repo ‚Üí $env (`$short_sha`)"
                ;;
              success)
                content="‚úÖ Deployment succeeded for $repo ‚Üí $env (`$short_sha`)";;
              failure|error)
                content="‚ùå Deployment failed for $repo ‚Üí $env (`$short_sha`)";;
            esac
    
            if [ -n "$url" ] && [ "$state" = "success" ]; then
              content="$content\n$url"
            fi
    
            echo "content<<EOF" >> $GITHUB_OUTPUT
            echo "$content" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
    

      - name: Post to Discord (if secret present and not from fork)
        if: ${{ secrets.DISCORD_DEPLOY != '' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository) }}
        run: |
          jq -n --arg content "${{ steps.msg.outputs.content }}" --arg username "Deploy Bot" \
            '{username:$username, content:$content}' \
          | curl -sS -H "Content-Type: application/json" -d @- "${{ secrets.Discord_Deploy || secrets.DISCORD_DEPLOY }}"
