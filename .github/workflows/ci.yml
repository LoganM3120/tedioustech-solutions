name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Lightweight tooling install (no lockfile, no commit)
      - name: Install tooling
        run: |
          npm init -y >/dev/null 2>&1 || true
          npm i -D --no-audit --no-fund prettier eslint stylelint stylelint-config-standard || true

      # ---- Checks ----
      - name: Prettier check
        run: npx prettier --check "**/*.{html,css,js,json,md}"

      - name: ESLint (if configured)
        run: |
          if [ -f ".eslintrc" ] || [ -f ".eslintrc.json" ] || [ -f ".eslintrc.js" ] || [ -f ".eslintrc.cjs" ]; then
            npx eslint . --max-warnings=0
          else
            echo "No ESLint config found; skipping."
          fi

      - name: Stylelint (if configured)
        run: |
          if [ -f ".stylelintrc" ] || [ -f ".stylelintrc.json" ] || [ -f ".stylelintrc.cjs" ] || [ -f ".stylelintrc.js" ]; then
            npx stylelint "**/*.css"
          else
            echo "No Stylelint config found; skipping."
          fi

      # ---- Notifications ----
      - name: Notify Discord on failure
        if: failure()
        run: |
          msg="❌ CI failed in **${{ github.repository }}** on \`${{ github.ref_name }}\` by **${{ github.actor }}** · ${{ github.workflow }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -sS -H "Content-Type: application/json" \
            -d "{\"username\":\"Build Bot\",\"content\":$(printf %s "$msg" | jq -Rs .)}" \
            "${{ secrets.DISCORD_WEBHOOK }}"

      - name: Notify Discord on success
        if: success() && (github.ref == 'refs/heads/main' || github.event_name == 'pull_request')
        run: |
          msg="✅ CI passed in **${{ github.repository }}** on \`${{ github.ref_name }}\` by **${{ github.actor }}** · ${{ github.workflow }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -sS -H "Content-Type: application/json" \
            -d "{\"username\":\"Build Bot\",\"content\":$(printf %s "$msg" | jq -Rs .)}" \
            "${{ secrets.DISCORD_WEBHOOK }}"
