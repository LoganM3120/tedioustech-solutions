name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# --- Notify when the workflow actually starts (not when queued) ---
jobs:
  notify-start:
    name: Discord notify (start)
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - name: Post "in progress" to Discord (if secret present and not from fork)
        if: ${{ env.DISCORD_WEBHOOK != '' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository) }}
        run: |
          msg="🚧 CI started for **${{ github.repository }}** on \`${{ github.ref_name }}\` by **${{ github.actor }}** · ${{ github.workflow }}"
          payload=$(jq -n --arg content "$msg" '{username:"Build Bot",content:$content}')
          curl -sS -H "Content-Type: application/json" -d "$payload" "$DISCORD_WEBHOOK"

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    needs: [notify-start]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install tooling
        run: |
          npm init -y >/dev/null 2>&1 || true
          npm i -D --no-audit --no-fund prettier
      - name: Prettier check
        run: npx prettier --check "**/*.{html,css,js,json,md}"

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    needs: [notify-start]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install tooling (if configured)
        run: |
          npm init -y >/dev/null 2>&1 || true
          # Only install if config exists (keeps this job green if you don't use ESLint yet)
          if [ -f ".eslintrc" ] || [ -f ".eslintrc.json" ] || [ -f ".eslintrc.js" ] || [ -f ".eslintrc.cjs" ]; then
            npm i -D --no-audit --no-fund eslint
          else
            echo "No ESLint config found; skipping install."
          fi
      - name: Run ESLint (if configured)
        run: |
          if [ -f ".eslintrc" ] || [ -f ".eslintrc.json" ] || [ -f ".eslintrc.js" ] || [ -f ".eslintrc.cjs" ]; then
            npx eslint . --max-warnings=0
          else
            echo "No ESLint config found; skipping."
          fi

  stylelint:
    name: Stylelint
    runs-on: ubuntu-latest
    needs: [notify-start]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install tooling (if configured)
        run: |
          npm init -y >/dev/null 2>&1 || true
          if [ -f ".stylelintrc" ] || [ -f ".stylelintrc.json" ] || [ -f ".stylelintrc.cjs" ] || [ -f ".stylelintrc.js" ]; then
            npm i -D --no-audit --no-fund stylelint stylelint-config-standard
          else
            echo "No Stylelint config found; skipping install."
          fi
      - name: Run Stylelint (if configured)
        run: |
          if [ -f ".stylelintrc" ] || [ -f ".stylelintrc.json" ] || [ -f ".stylelintrc.cjs" ] || [ -f ".stylelintrc.js" ]; then
            npx stylelint "**/*.css"
          else
            echo "No Stylelint config found; skipping."
          fi

  # Aggregate job that depends on all checks
  all-checks:
    name: All checks
    runs-on: ubuntu-latest
    needs: [prettier, eslint, stylelint]
    steps:
      - run: echo "All checks completed."

  # Final Discord notification (success/failure)
  notify:
    name: Discord notify (result)
    runs-on: ubuntu-latest
    needs: [all-checks]
    if: always()
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - name: Prepare message
        id: prep
        shell: bash
        run: |
          if [[ "${{ needs.all-checks.result }}" == "success" ]]; then
            echo "msg=✅ CI passed in **${{ github.repository }}** on \`${{ github.ref_name }}\` by **${{ github.actor }}** · ${{ github.workflow }}%0A${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          else
            echo "msg=❌ CI failed in **${{ github.repository }}** on \`${{ github.ref_name }}\` by **${{ github.actor }}** · ${{ github.workflow }}%0A${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_OUTPUT
          fi
      - name: Post to Discord (if secret present and not from fork)
        if: ${{ env.DISCORD_WEBHOOK != '' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository) }}
        run: |
          payload=$(jq -n --arg content "${{ steps.prep.outputs.msg }}" '{username:"Build Bot",content:$content}')
          curl -sS -H "Content-Type: application/json" -d "$payload" "$DISCORD_WEBHOOK"